openapi: 3.0.1
info:
  title: common-platform-accounting-gl
  description: General Ledger Accounting Management
  contact:
    name: Firefly Software Solutions Inc
    email: dev@getfirefly.io
  version: 1.0.0
servers:
  - url: http://core.getfirefly.io/general-ledger
    description: Development Environment
  - url: /
    description: Local Development Environment
tags:
  - name: GL Accounts
    description: API for managing GL Accounts
  - name: Journal Entries
    description: API for managing Journal Entries (nested under Journal Batches)
  - name: Journal Batches
    description: API for managing Journal Batches
  - name: Journal Lines
    description: API for managing Journal Lines (nested under Journal Entries)
paths:
  /api/v1/journal-batches/{id}:
    get:
      tags:
        - Journal Batches
      summary: Get a Journal Batch by ID
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalBatchDTO'
    put:
      tags:
        - Journal Batches
      summary: Update an existing Journal Batch
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalBatchDTO'
        required: true
      responses:
        '200':
          description: Batch updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalBatchDTO'
    delete:
      tags:
        - Journal Batches
      summary: Delete a Journal Batch
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Batch deleted
  /api/v1/journal-batches/{batchId}/entries/{entryId}:
    get:
      tags:
        - Journal Entries
      summary: Get a Journal Entry by ID within a Batch
      operationId: getById_1
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalEntryDTO'
    put:
      tags:
        - Journal Entries
      summary: Update a Journal Entry within a Batch
      operationId: update_1
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryDTO'
        required: true
      responses:
        '200':
          description: Entry updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalEntryDTO'
    delete:
      tags:
        - Journal Entries
      summary: Delete a Journal Entry within a Batch
      operationId: delete_1
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Entry deleted
  /api/v1/journal-batches/{batchId}/entries/{entryId}/lines/{lineId}:
    get:
      tags:
        - Journal Lines
      summary: Get a Journal Line by ID
      operationId: getById_2
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: lineId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalLineDTO'
    put:
      tags:
        - Journal Lines
      summary: Update a Journal Line
      operationId: update_2
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: lineId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalLineDTO'
        required: true
      responses:
        '200':
          description: Line updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalLineDTO'
    delete:
      tags:
        - Journal Lines
      summary: Delete a Journal Line
      operationId: delete_2
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: lineId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Line deleted
  /api/v1/gl-accounts/{id}:
    get:
      tags:
        - GL Accounts
      summary: Get GL Account by ID
      operationId: getById_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GlAccountDTO'
    put:
      tags:
        - GL Accounts
      summary: Update GL Account
      operationId: update_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlAccountDTO'
        required: true
      responses:
        '200':
          description: GL Account updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GlAccountDTO'
    delete:
      tags:
        - GL Accounts
      summary: Delete GL Account
      operationId: delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: GL Account deleted
  /api/v1/journal-batches:
    post:
      tags:
        - Journal Batches
      summary: Create a new Journal Batch
      operationId: create
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalBatchDTO'
        required: true
      responses:
        '201':
          description: Journal Batch created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalBatchDTO'
  /api/v1/journal-batches/{batchId}/entries:
    post:
      tags:
        - Journal Entries
      summary: Create a new Journal Entry in a specific Batch
      operationId: create_1
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryDTO'
        required: true
      responses:
        '201':
          description: Journal Entry created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalEntryDTO'
  /api/v1/journal-batches/{batchId}/entries/{entryId}/lines:
    post:
      tags:
        - Journal Lines
      summary: Create a new Journal Line in a specific Entry
      operationId: create_2
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalLineDTO'
        required: true
      responses:
        '201':
          description: Journal Line created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalLineDTO'
  /api/v1/gl-accounts:
    post:
      tags:
        - GL Accounts
      summary: Create GL Account
      operationId: create_3
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlAccountDTO'
        required: true
      responses:
        '201':
          description: GL Account created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GlAccountDTO'
  /api/v1/gl-accounts/{parentId}/children:
    get:
      tags:
        - GL Accounts
      summary: List child GL Accounts for a given parent
      operationId: findChildren
      parameters:
        - name: parentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.code
          in: query
          description: Exact filter for code
          required: false
          schema:
            type: string
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.type
          in: query
          description: Exact filter for type
          required: false
          schema:
            type: string
            enum:
              - ASSET
              - LIABILITY
              - INCOME
              - EXPENSE
              - EQUITY
        - name: filters.parentId
          in: query
          description: Exact filter for parent id
          required: false
          schema:
            type: string
        - name: filters.isLeaf
          in: query
          description: Exact filter for is leaf
          required: false
          schema:
            type: boolean
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.currency
          in: query
          description: Exact filter for currency
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseGlAccountDTO'
    post:
      tags:
        - GL Accounts
      summary: Create a child GL Account under a parent
      operationId: createChild
      parameters:
        - name: parentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlAccountDTO'
        required: true
      responses:
        '201':
          description: Child GL Account created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GlAccountDTO'
  /api/v1/journal-batches/:
    get:
      tags:
        - Journal Batches
      summary: Search/Filter Journal Batches
      operationId: search
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.reference
          in: query
          description: Exact filter for reference
          required: false
          schema:
            type: string
        - name: filters.status
          in: query
          description: Exact filter for status
          required: false
          schema:
            type: string
            enum:
              - OPEN
              - POSTED
              - CANCELLED
              - REVERSED
        - name: filters.batchDate
          in: query
          description: Exact filter for batch date
          required: false
          schema:
            type: string
        - name: filters.remarks
          in: query
          description: Exact filter for remarks
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseJournalBatchDTO'
  /api/v1/journal-batches/{batchId}/entries/:
    get:
      tags:
        - Journal Entries
      summary: Search/Filter Journal Entries within a Batch
      operationId: search_1
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.batchId
          in: query
          description: Exact filter for batch id
          required: false
          schema:
            type: string
        - name: filters.transactionId
          in: query
          description: Exact filter for transaction id
          required: false
          schema:
            type: string
        - name: filters.sourceModule
          in: query
          description: Exact filter for source module
          required: false
          schema:
            type: string
        - name: filters.totalAmount
          in: query
          description: Exact filter for total amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[totalAmount].from
          in: query
          description: Filter total amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[totalAmount].to
          in: query
          description: Filter total amount to value
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.entryDate
          in: query
          description: Exact filter for entry date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[entryDate].from
          in: query
          description: Filter entry date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[entryDate].to
          in: query
          description: Filter entry date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.posted
          in: query
          description: Exact filter for posted
          required: false
          schema:
            type: boolean
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseJournalEntryDTO'
  /api/v1/journal-batches/{batchId}/entries/{entryId}/lines/:
    get:
      tags:
        - Journal Lines
      summary: Search/Filter Journal Lines
      operationId: search_2
      parameters:
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: filterRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/FilterRequestJournalLineDTO'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseJournalLineDTO'
  /api/v1/gl-accounts/:
    get:
      tags:
        - GL Accounts
      summary: Search/Filter GL Accounts
      operationId: search_3
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.code
          in: query
          description: Exact filter for code
          required: false
          schema:
            type: string
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.type
          in: query
          description: Exact filter for type
          required: false
          schema:
            type: string
            enum:
              - ASSET
              - LIABILITY
              - INCOME
              - EXPENSE
              - EQUITY
        - name: filters.parentId
          in: query
          description: Exact filter for parent id
          required: false
          schema:
            type: string
        - name: filters.isLeaf
          in: query
          description: Exact filter for is leaf
          required: false
          schema:
            type: boolean
        - name: filters.active
          in: query
          description: Exact filter for active
          required: false
          schema:
            type: boolean
        - name: filters.currency
          in: query
          description: Exact filter for currency
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseGlAccountDTO'
components:
  schemas:
    JournalBatchDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        reference:
          type: string
        status:
          type: string
          enum:
            - OPEN
            - POSTED
            - CANCELLED
            - REVERSED
        batchDate:
          type: string
          format: date
        remarks:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    JournalEntryDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        batchId:
          type: string
          format: uuid
        transactionId:
          type: string
        sourceModule:
          type: string
        totalAmount:
          type: number
        description:
          type: string
        entryDate:
          type: string
          format: date-time
        posted:
          type: boolean
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    JournalLineDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        entryId:
          type: string
          format: uuid
        accountId:
          type: string
          format: uuid
        amount:
          type: number
        drCr:
          type: string
          enum:
            - DR
            - CR
        memo:
          type: string
        fxCurrency:
          type: string
        fxRate:
          type: number
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GlAccountDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - ASSET
            - LIABILITY
            - INCOME
            - EXPENSE
            - EQUITY
        parentId:
          type: string
          format: uuid
        active:
          type: boolean
        currency:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        leaf:
          type: boolean
    PaginationResponseJournalBatchDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/JournalBatchDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseJournalEntryDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/JournalEntryDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterOptions:
      type: object
      properties:
        caseInsensitiveStrings:
          type: boolean
        includeInheritedFields:
          type: boolean
      description: Filter options for customizing filter behavior
    FilterRequestJournalLineDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/JournalLineDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    PaginationRequest:
      type: object
      properties:
        pageNumber:
          type: integer
          description: The zero-based page number to retrieve.
          format: int32
          example: 0
          default: 0
        pageSize:
          type: integer
          description: The number of items per page.
          format: int32
          example: 10
          default: 10
        sortBy:
          type: string
          description: The field to sort the results by.
          example: name
        sortDirection:
          type: string
          description: The direction of sorting, either ASC or DESC.
          example: DESC
          default: DESC
      description: Represents a pagination request for retrieving paginated results, including page number, size, sort field, and direction.
    RangeFilter:
      type: object
      properties:
        ranges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RangeObject'
          description: Map of field names to their range criteria
      description: Represents range filters for numeric fields
    RangeObject:
      type: object
      properties:
        from:
          type: object
          description: Start value of the range
        to:
          type: object
          description: End value of the range
      description: Represents a range with from and to values
    PaginationResponseJournalLineDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/JournalLineDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseGlAccountDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/GlAccountDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
